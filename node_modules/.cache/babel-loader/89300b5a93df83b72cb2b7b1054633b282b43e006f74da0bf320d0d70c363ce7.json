{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanja\\\\OneDrive\\\\Desktop\\\\REACT UDEMY RESOURCES\\\\food ordering app\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport CartContext from './CartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id); //to check if item is part of cart findIndex which finds index of item in an arrray.\n    // returns index of the item if it exists.\n    const existingCartItem = state.items[existingCartItemIndex]; // get the item based on index else existingCartItem is null\n\n    let updatedItem;\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem; // overriding existing cart item with new updated items\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    //const updatedItems = state.items.concat(action.item);  // returns a new array. concat.\n    //const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    const updatedItem = {\n      ...existingItem,\n      amount: existingItem.amount - 1\n    };\n    updatedItems = [...state.items];\n    updatedItems[existingCartItemIndex] = updatedItem;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","updatedItems","concat","existingItem","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/sanja/OneDrive/Desktop/REACT UDEMY RESOURCES/food ordering app/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from 'react';\r\n\r\nimport CartContext from './CartContext';\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    const updatedTotalAmount = state.totalAmount+ action.item.price * action.item.amount;\r\n    const existingCartItemIndex = state.items.findIndex(item=>item.id===action.item.id) //to check if item is part of cart findIndex which finds index of item in an arrray.\r\n// returns index of the item if it exists.\r\n    const existingCartItem = state.items[existingCartItemIndex] // get the item based on index else existingCartItem is null\r\n\r\n    let updatedItem;\r\n    let updatedItems;\r\n\r\n    if(existingCartItem){\r\n      const updatedItem={\r\n        ...existingCartItem,\r\n        amount : existingCartItem.amount +action.item.amount\r\n      }\r\n      updatedItems =[...state.items]\r\n      updatedItems[existingCartItemIndex]=updatedItem // overriding existing cart item with new updated items\r\n    } else{\r\n    \r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    //const updatedItems = state.items.concat(action.item);  // returns a new array. concat.\r\n    //const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount\r\n    };\r\n  }\r\n\r\n  if(action.type==='REMOVE'){\r\n    const existingCartItemIndex = state.items.findIndex(item=>item.id===action.id) \r\n    const existingItem = state.items[existingCartItemIndex]\r\n    const updatedTotalAmount = state.totalAmount-existingItem.price\r\n    let updatedItems;\r\n  \r\n      const updatedItem = {...existingItem,amount: existingItem.amount-1}\r\n      updatedItems =[...state.items]\r\n      updatedItems[existingCartItemIndex]=updatedItem\r\n    \r\n\r\n  \r\n\r\n  return{\r\n    items:updatedItems,\r\n    totalAmount : updatedTotalAmount\r\n\r\n  }\r\n}\r\n   return defaultCartState\r\n   \r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState); \r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({type: 'ADD', item: item});\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({type: 'REMOVE', id: id});\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}